name: Build Go

on:
  push:
    branches:
      - build
  pull_request:
    branches:
      - build
  workflow_dispatch:
    inputs:
      reason:
        description: '运行原因'
        required: false
        default: '手动触发构建'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true
jobs:

  build-for-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22
      - name: Build
        run: |
          cd go
          go build -buildmode=c-shared -ldflags="-s -w" -trimpath -o libmtorrentserver.so ./binding/desktop
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with: 
          name: libmtorrentserver-linux
          path: go/libmtorrentserver.*

  build-for-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22
      - name: Build for ARM64
        run: |
          cd go
          CGO_ENABLED=1 GOARCH=arm64 go build -buildmode=c-shared -ldflags="-s -w" -trimpath -o libmtorrentserver_arm64.dylib ./binding/desktop
      - name: Build for AMD64
        run: |
          cd go
          CGO_ENABLED=1 GOARCH=amd64 go build -buildmode=c-shared -ldflags="-s -w" -trimpath -o libmtorrentserver_amd64.dylib ./binding/desktop
      - name: Create Universal Binary
        run: |
          cd go
          lipo -create -output libmtorrentserver.dylib libmtorrentserver_arm64.dylib libmtorrentserver_amd64.dylib
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with: 
          name: libmtorrentserver-macos
          path: go/libmtorrentserver*

  build-for-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Build for Windows (64-bit)
        run: |
          cd go
          $env:CGO_ENABLED = "1"
          $env:CC = "gcc"
          $env:GOARCH = "amd64"
          go build -buildmode=c-shared -ldflags="-s -w -extldflags=-static" -trimpath -o libmtorrentserver.dll ./binding/desktop
    
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with: 
          name: libmtorrentserver-windows-64bit
          path: go/libmtorrentserver.*

  build-for-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22
      - name: Setup Java toolchain
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      - name: Setup Android SDK and NDK
        run: |
          sdkmanager --install "ndk;25.2.9519653"
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV
      - name: Install gomobile
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          go install golang.org/x/mobile/cmd/gobind@latest
      - name: Initialize gomobile
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          gomobile init -v
      - name: Build Android AAR
        run: |
          cd go
          go get -u golang.org/x/mobile
          gomobile bind -v -target=android/arm,android/arm64,android/amd64,android/386 -androidapi 21 -ldflags="-s -w" -trimpath -o libmtorrentserver.aar ./binding/mobile
      - name: Upload Android Artifact
        uses: actions/upload-artifact@v4
        with: 
          name: libmtorrentserver-android
          path: go/libmtorrentserver.aar

  build-for-iOS:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22
      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      - name: Install gomobile
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          go install golang.org/x/mobile/cmd/gobind@latest
      - name: Initialize gomobile
        run: |
          gomobile init -v
      - name: Build for iOS
        run: |
          cd go
          go get -u golang.org/x/mobile
          gomobile bind -target=ios,iossimulator -ldflags="-s -w" -trimpath -o libmtorrentserver.xcframework ./binding/mobile
      - name: Upload iOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libmtorrentserver-ios
          path: go/libmtorrentserver.xcframework